# ~/.porter/config.yaml

# Set the default namespace
namespace: "dev"

# Threshold for printing messages to the console
# Allowed values are: debug, info, warn, error.
# Does not affect what is written to the log file or traces.
verbosity: "debug"

# Default command output to JSON
output: "json"

# Allow all bundles access to the Docker Host
allow-docker-host-access: true

# Enable experimental features
experimental:
  - "flagA"
  - "flagB"

# Use Docker buildkit to build the bundle
build-driver: "buildkit"

# Do not automatically build a bundle from source
# before running the requested command when Porter detects that it is out-out-date.
# Example: Normally running porter explain in a bundle directory should trigger an automatic porter build after you have edited porter.yaml
# and disabling autobuild would have porter explain use the cached build (which could be stale).
autobuild-disabled: true

# Overwrite the existing published bundle when publishing or copying a bundle.
# By default, Porter detects when a push would overwrite an existing artifact and requires --force to proceed.
force-overwrite: false

# Use the storage configuration named devdb
default-storage: "devdb"

# When default-storage is not set, use the mongodb-docker plugin.
# This mode does not support additional configuration for the plugin.
# If the plugin requires configuration, use default-storage and define
# the configuration in the storage section.
default-storage-plugin: "mongodb-docker"

# Use the secrets configuration named mysecrets
default-secrets: "mysecrets"

# When default-secrets is not set, use the kubernetes.secret plugin.
# This mode does not support additional configuration for the plugin.
# If the plugin requires configuration, use default-secrets and define
# the configuration in the secrets section.
default-secrets-plugin: "filesystem" # "kubernetes.secret"

# Use the signer configuration name mysigner.
# If not specified, bundles and invocation images cannot be signed.
default-signer: "mysigner"

# Defines storage accounts
storage:
  # The storage account name
  - name: "devdb"

    # The plugin used to access the storage account
    plugin: "mongodb"

    # Additional configuration for storage account
    # These values vary depending on the plugin used
    config:
      # The mongodb connection string
      url: "${secret.porter-db-connection-string}"

      # Timeout for database queries
      timeout: 300

# Define secret store accounts
secrets:
  # The secret store name
  - name: "mysecrets"

    # The plugin used to access the secret store account
    plugin: "azure.keyvault"

    # Additional configuration for secret store account
    # These values vary depending on the plugin used
    config:
      # The name of the secret vault
      vault: "topsecret"

      # The subscription where the vault is defined
      subscription-id: "${env.AZURE_SUBSCRIPTION_ID}"

# Define signers
signer:
  # The signer name
  - name: "mysigner"

    # The plugin used to sign bundles
    plugin: "cosign"

    # Additional configuration for the signer
    # These values vary depending on the plugin used
    config:
      # Path to the public key
      publickey: /home/porter/cosign.pub

      # Path to the public key
      privatekey: /home/porter/cosign.key

# Log command output to a file in PORTER_HOME/logs/
logs:
  # Log command output to a file
  log-to-file: true

  # When structured is true, the logs printed to the console
  # include a timestamp and log level
  structured: false

  # Sets the log level for what is written to the file
  # Allowed values: debug, info, warn, error
  level: "info"

# Send trace and log data to an Open Telemetry collector
telemetry:
  # Enable trace collection
  enabled: true

  # Send telemetry via the grpc protocol
  # Allowed values: http/protobuf, grpc
  protocol: "grpc"

  # The Open Telemetry collector endpoint
  endpoint: "127.0.0.1:4318"

  # Specify if the collector endpoint is secured with TLS
  insecure: true

  # Specify a certificate to connect to the collector endpoint
  # certificate: "/home/me/some-cert.pem"

  # The compression type used when communicating with the collector endpoint
  compression: "gzip"

  # The timeout enforced when communicating with the collector endpoint
  timeout: "3s"

  # The timeout enforced when establishing a connection with the collector endpoint
  start-timeout: "100ms"

  # Used for testing that porter is emitting spans without setting up an open telemetry collector
  redirect-to-file: false

  # Additional headers to send to the open telemetry collector
  headers:
    environment: "dev"
    owner: "myusername"
