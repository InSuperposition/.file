#!/bin/bash
# SSH Certificate Authority Setup Script
# This script sets up SSH certificate authentication for remote access

set -euo pipefail

# Configuration
CA_DIR="$HOME/.ssh/ca"
USERNAME="${USER:-$(whoami)}"
HOSTNAME="${HOSTNAME:-$(hostname)}"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

check_ssh_service() {
    log_info "Checking SSH service status..."
    if sudo launchctl list | grep -q ssh; then
        log_info "SSH service is running"
        return 0
    else
        log_warn "SSH service not running. Run: sudo systemsetup -setremotelogin on"
        return 1
    fi
}

setup_ca_directory() {
    log_info "Setting up CA directory..."
    mkdir -p "$CA_DIR"
    chmod 700 "$CA_DIR"
    cd "$CA_DIR"
}

generate_ca_key() {
    log_info "Generating CA key pair..."
    if [[ ! -f "$CA_DIR/ssh_ca" ]]; then
        ssh-keygen -t ed25519 -f ssh_ca -C "SSH CA for MacBook Pro" -N ""
        chmod 600 ssh_ca
        chmod 644 ssh_ca.pub
        log_info "CA key pair generated"
    else
        log_info "CA key pair already exists"
    fi
}

generate_host_certificate() {
    log_info "Generating host certificate..."
    if [[ ! -f "/etc/ssh/ssh_host_ed25519_key-cert.pub" ]]; then
        sudo ssh-keygen -s "$CA_DIR/ssh_ca" -I "macbook-host" -h \
            -n "macbook.local,localhost,$HOSTNAME,10.0.0.5,10.0.0.6" \
            /etc/ssh/ssh_host_ed25519_key.pub
        sudo mv /etc/ssh/ssh_host_ed25519_key-cert.pub /etc/ssh/
        log_info "Host certificate generated"
    else
        log_info "Host certificate already exists"
    fi
}

generate_user_certificate() {
    log_info "Generating user certificate..."
    if [[ ! -f "$HOME/.ssh/id_ed25519-cert.pub" ]]; then
        # Generate user key if it doesn't exist
        if [[ ! -f "$HOME/.ssh/id_ed25519" ]]; then
            ssh-keygen -t ed25519 -f "$HOME/.ssh/id_ed25519" -C "$USERNAME@$HOSTNAME" -N ""
        fi
        
        # Generate certificate valid for 1 year
        ssh-keygen -s "$CA_DIR/ssh_ca" -I "$USERNAME-macbook" -n "$USERNAME" \
            -V +52w "$HOME/.ssh/id_ed25519.pub"
        log_info "User certificate generated (valid for 52 weeks)"
    else
        log_info "User certificate already exists"
    fi
}

install_ca_public_key() {
    log_info "Installing CA public key..."
    sudo cp "$CA_DIR/ssh_ca.pub" /etc/ssh/trusted_user_ca_keys
    sudo chmod 644 /etc/ssh/trusted_user_ca_keys
    log_info "CA public key installed"
}

copy_sshd_config() {
    log_info "Installing SSH configuration..."
    sudo mkdir -p /etc/ssh/sshd_config.d/
    sudo cp "$HOME/.file/etc/ssh/sshd_config.d/99_custom.conf" /etc/ssh/sshd_config.d/
    
    # Replace $(whoami) with actual username
    sudo sed -i.bak "s/\$(whoami)/$USERNAME/g" /etc/ssh/sshd_config.d/99_custom.conf
    
    log_info "SSH configuration installed"
}

restart_ssh_service() {
    log_info "Restarting SSH service..."
    sudo launchctl unload /System/Library/LaunchDaemons/ssh.plist 2>/dev/null || true
    sudo launchctl load /System/Library/LaunchDaemons/ssh.plist
    log_info "SSH service restarted"
}

verify_setup() {
    log_info "Verifying setup..."
    
    # Check certificate validity
    if ssh-keygen -L -f "$HOME/.ssh/id_ed25519-cert.pub" >/dev/null 2>&1; then
        log_info "User certificate is valid"
    else
        log_error "User certificate is invalid"
        return 1
    fi
    
    # Test local connection
    if ssh -o ConnectTimeout=5 -p 2222 localhost echo "SSH test successful" 2>/dev/null; then
        log_info "SSH connection test successful"
    else
        log_warn "SSH connection test failed"
    fi
}

main() {
    log_info "Starting SSH certificate setup..."
    
    setup_ca_directory
    generate_ca_key
    generate_host_certificate
    generate_user_certificate
    install_ca_public_key
    copy_sshd_config
    restart_ssh_service
    
    log_info "Waiting for SSH service to start..."
    sleep 3
    
    verify_setup
    
    log_info "SSH certificate setup complete!"
    log_info "CA directory: $CA_DIR"
    log_info "User certificate: $HOME/.ssh/id_ed25519-cert.pub"
    log_info "SSH port: 2222"
    
    echo ""
    log_info "Next steps:"
    echo "1. Run: ~/.local/bin/connection_test"
    echo "2. Configure your iPhone with the generated certificates"
    echo "3. Use ~/.local/bin/iphone_setup_guide for mobile setup"
}

main "$@"